# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (testpypi or pypi)'
        required: true
        default: 'testpypi'
        type: choice
        options:
        - testpypi
        - pypi

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
    - name: Build package
      run: |
        uv venv
        uv pip install build twine
        uv run python -m build
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
      if: ${{ github.event_name == 'release' || github.event.inputs.environment == 'pypi' }}
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        
    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
      if: ${{ github.event.inputs.environment == 'testpypi' }}
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/