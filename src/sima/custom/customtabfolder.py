# This an autogenerated file
# 
# Generated with CustomTabFolder
from typing import Dict,Sequence,List
from dmt.blueprint import Blueprint
from .blueprints.customtabfolder import CustomTabFolderBlueprint
from typing import Dict
from sima.custom.customcomponent import CustomComponent
from sima.custom.customtabitem import CustomTabItem
from sima.sima.scriptablevalue import ScriptableValue

class CustomTabFolder(CustomComponent):
    """
    Keyword arguments
    -----------------
    description : str
         (default "")
    scriptableValues : List[ScriptableValue]
    tabItems : List[CustomTabItem]
    """

    def __init__(self , description="", **kwargs):
        super().__init__(**kwargs)
        self.description = description
        self.scriptableValues = list()
        self.tabItems = list()
        for key, value in kwargs.items():
            if not isinstance(value, Dict):
                setattr(self, key, value)


    @property
    def blueprint(self) -> Blueprint:
        """Return blueprint that this entity represents"""
        return CustomTabFolderBlueprint()


    @property
    def description(self) -> str:
        """"""
        return self.__description

    @description.setter
    def description(self, value: str):
        """Set description"""
        self.__description = value

    @property
    def scriptableValues(self) -> List[ScriptableValue]:
        """"""
        return self.__scriptableValues

    @scriptableValues.setter
    def scriptableValues(self, value: List[ScriptableValue]):
        """Set scriptableValues"""
        if not isinstance(value, Sequence):
            raise Exception("Expected sequense, but was " , type(value))
        self.__scriptableValues = value

    @property
    def tabItems(self) -> List[CustomTabItem]:
        """"""
        return self.__tabItems

    @tabItems.setter
    def tabItems(self, value: List[CustomTabItem]):
        """Set tabItems"""
        if not isinstance(value, Sequence):
            raise Exception("Expected sequense, but was " , type(value))
        self.__tabItems = value
