# This an autogenerated file
# 
# Generated with HLAWellPathGroup
from typing import Dict,Sequence,List
from dmt.blueprint import Blueprint
from .blueprints.hlawellpathgroup import HLAWellPathGroupBlueprint
from typing import Dict
from sima.hla.hlaobject import HLAObject
from sima.hla.hlawellpath import HLAWellPath
from sima.sima.scriptablevalue import ScriptableValue

class HLAWellPathGroup(HLAObject):
    """
    Keyword arguments
    -----------------
    description : str
         (default "")
    scriptableValues : List[ScriptableValue]
    name : str
         (default None)
    HLAWellPaths : List[HLAWellPath]
    """

    def __init__(self , description="", **kwargs):
        super().__init__(**kwargs)
        self.description = description
        self.scriptableValues = list()
        self.name = None
        self.HLAWellPaths = list()
        for key, value in kwargs.items():
            if not isinstance(value, Dict):
                setattr(self, key, value)


    @property
    def blueprint(self) -> Blueprint:
        """Return blueprint that this entity represents"""
        return HLAWellPathGroupBlueprint()


    @property
    def description(self) -> str:
        """"""
        return self.__description

    @description.setter
    def description(self, value: str):
        """Set description"""
        self.__description = value

    @property
    def scriptableValues(self) -> List[ScriptableValue]:
        """"""
        return self.__scriptableValues

    @scriptableValues.setter
    def scriptableValues(self, value: List[ScriptableValue]):
        """Set scriptableValues"""
        if not isinstance(value, Sequence):
            raise Exception("Expected sequense, but was " , type(value))
        self.__scriptableValues = value

    @property
    def name(self) -> str:
        """"""
        return self.__name

    @name.setter
    def name(self, value: str):
        """Set name"""
        self.__name = value

    @property
    def HLAWellPaths(self) -> List[HLAWellPath]:
        """"""
        return self.__HLAWellPaths

    @HLAWellPaths.setter
    def HLAWellPaths(self, value: List[HLAWellPath]):
        """Set HLAWellPaths"""
        if not isinstance(value, Sequence):
            raise Exception("Expected sequense, but was " , type(value))
        self.__HLAWellPaths = value
