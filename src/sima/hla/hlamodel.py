# This an autogenerated file
# 
# Generated with HLAModel
from typing import Dict,Sequence,List
from dmt.blueprint import Blueprint
from .blueprints.hlamodel import HLAModelBlueprint
from typing import Dict
from sima.hla.hlaforce import HLAForce
from sima.hla.hlalocation import HLALocation
from sima.sima.moao import MOAO
from sima.sima.scriptablevalue import ScriptableValue

class HLAModel(MOAO):
    """
    Keyword arguments
    -----------------
    _id : str
         (default "")
    scriptableValues : List[ScriptableValue]
    location : HLALocation
    forces : List[HLAForce]
    """

    def __init__(self , _id="", **kwargs):
        super().__init__(**kwargs)
        self._id = _id
        self.scriptableValues = list()
        self.location = None
        self.forces = list()
        for key, value in kwargs.items():
            if not isinstance(value, Dict):
                setattr(self, key, value)


    @property
    def blueprint(self) -> Blueprint:
        """Return blueprint that this entity represents"""
        return HLAModelBlueprint()


    @property
    def _id(self) -> str:
        """"""
        return self.___id

    @_id.setter
    def _id(self, value: str):
        """Set _id"""
        self.___id = str(value)

    @property
    def scriptableValues(self) -> List[ScriptableValue]:
        """"""
        return self.__scriptableValues

    @scriptableValues.setter
    def scriptableValues(self, value: List[ScriptableValue]):
        """Set scriptableValues"""
        if not isinstance(value, Sequence):
            raise Exception("Expected sequense, but was " , type(value))
        self.__scriptableValues = value

    @property
    def location(self) -> HLALocation:
        """"""
        return self.__location

    @location.setter
    def location(self, value: HLALocation):
        """Set location"""
        self.__location = value

    @property
    def forces(self) -> List[HLAForce]:
        """"""
        return self.__forces

    @forces.setter
    def forces(self, value: List[HLAForce]):
        """Set forces"""
        if not isinstance(value, Sequence):
            raise Exception("Expected sequense, but was " , type(value))
        self.__forces = value
