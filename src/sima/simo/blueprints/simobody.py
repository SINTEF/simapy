# 
# Generated with SIMOBodyBlueprint
from dmt.blueprint import Blueprint
from dmt.dimension import Dimension
from dmt.attribute import Attribute
from dmt.enum_attribute import EnumAttribute
from dmt.blueprint_attribute import BlueprintAttribute
from sima.sima.blueprints.body import BodyBlueprint

class SIMOBodyBlueprint(BodyBlueprint):
    """"""

    def __init__(self, name="SIMOBody", package_path="sima/simo", description=""):
        super().__init__(name,package_path,description)
        self.attributes.append(Attribute("_id","string","",default=""))
        self.attributes.append(BlueprintAttribute("scriptableValues","sima/sima/ScriptableValue","",True,Dimension("*")))
        self.attributes.append(Attribute("name","string","",default=""))
        self.attributes.append(Attribute("length","number","Length",default=10.0))
        self.attributes.append(Attribute("width","number","Width",default=5.0))
        self.attributes.append(Attribute("height","number","Height",default=5.0))
        self.attributes.append(BlueprintAttribute("appearance","sima/sima/Appearance","",True))
        self.attributes.append(BlueprintAttribute("initialPosition","sima/sima/Position","",True))
        self.attributes.append(BlueprintAttribute("viewpoints","sima/sima/BodyViewpoint","",True,Dimension("*")))
        self.attributes.append(EnumAttribute("_type","sima/simo/BodyType","Body type"))
        self.attributes.append(EnumAttribute("positionsImportType","sima/simo/PositionsImportType","Type of import for positions"))
        self.attributes.append(Attribute("positionsFileName","string","File name for body positions",default=""))
        self.attributes.append(Attribute("positionsHLAObjectName","string","HLA object name for body",default=""))
        self.attributes.append(Attribute("applyGravityForce","boolean","Should gravity force be included",default=False))
        self.attributes.append(BlueprintAttribute("bodyPoints","sima/simo/SIMOBodyPoint","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("catenarySystem","sima/simo/CatenarySystem","",True))
        self.attributes.append(BlueprintAttribute("structuralMass","sima/hydro/StructuralMass","",True))
        self.attributes.append(BlueprintAttribute("linearDamping","sima/hydro/LinearDampingMatrix","",True))
        self.attributes.append(BlueprintAttribute("quadraticDamping","sima/hydro/QuadraticDampingMatrix","",True))
        self.attributes.append(BlueprintAttribute("linearDampingMatrices","sima/simo/SIMOLinearDampingMatrix","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("quadraticDampingMatrices","sima/simo/SIMOQuadraticDampingMatrix","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("hydrostaticStiffnessData","sima/hydro/HydrostaticStiffnessData","",True))
        self.attributes.append(BlueprintAttribute("nonLinearHydrostaticStiffness","sima/simo/NonLinearHydrostaticStiffness","",True))
        self.attributes.append(BlueprintAttribute("nonlinearBuoyancyCorrection","sima/simo/NonlinearBuoyancyCorrection","",True))
        self.attributes.append(BlueprintAttribute("firstOrderMotionTransferFunction","sima/hydro/FirstOrderMotionTransferFunction","",True))
        self.attributes.append(BlueprintAttribute("firstOrderWaveForceTransferFunction","sima/hydro/FirstOrderWaveForceTransferFunction","",True))
        self.attributes.append(BlueprintAttribute("waveDriftForce","sima/hydro/WaveDriftForce","",True))
        self.attributes.append(BlueprintAttribute("waveDriftDamping","sima/hydro/WaveDriftDamping","",True))
        self.attributes.append(BlueprintAttribute("simplifiedWaveDriftDamping","sima/hydro/SimplifiedWaveDriftDamping","",True))
        self.attributes.append(BlueprintAttribute("quadraticWindCoefficients","sima/hydro/QuadraticWindCoefficient","",True))
        self.attributes.append(BlueprintAttribute("linearCurrentCoefficients","sima/hydro/LinearCurrentCoefficient","",True))
        self.attributes.append(BlueprintAttribute("quadraticCurrentCoefficients","sima/hydro/QuadraticCurrentCoefficient","",True))
        self.attributes.append(BlueprintAttribute("diffractedWaveField","sima/hydro/DiffractedWaveField","",True))
        self.attributes.append(BlueprintAttribute("smallBodyHydrodynamicalData","sima/simo/SmallBodyHydrodynamicData","",True))
        self.attributes.append(BlueprintAttribute("radiationData","sima/hydro/RadiationDataGroup","",True))
        self.attributes.append(BlueprintAttribute("specifiedForces","sima/simo/SpecifiedForce","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("specifiedMoments","sima/simo/SpecifiedMoment","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("thrusters","sima/simo/IThruster","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("controlSystem","sima/simo/ControlSystem","",True))
        self.attributes.append(BlueprintAttribute("slenderElements","sima/simo/SlenderElement","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("externalDLLForces","sima/simo/ExternalDLLForce","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("externalHLAForces","sima/simo/ExternalHLAForce","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("externalForcesFromFile","sima/simo/ExternalForceFromFile","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("fixedBodyElements","sima/simo/FixedBodyElement","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("timeDependentPointMasses","sima/simo/TimeDependentPointMass","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("timeDependentVolumeMasses","sima/simo/TimeDependentVolumeMass","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("slenderSystemConnection","sima/simo/BodySlenderSystemConnection","",True))
        self.attributes.append(BlueprintAttribute("gdfGeometry","sima/hydro/GDFGeometry","",True))
        self.attributes.append(BlueprintAttribute("fixedForceElongations","sima/simo/FixedForceElongation","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("accCOG","sima/sima/Point3","",True))
        self.attributes.append(BlueprintAttribute("liftAndDragForces","sima/simo/LiftAndDragForce","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("articulatedStructure","sima/simo/ArticulatedStructureData","",True))
        self.attributes.append(BlueprintAttribute("externalControlSystem","sima/simo/ExternalControlSystem","",True))
        self.attributes.append(BlueprintAttribute("dockingConePositionings","sima/simo/DockingConePositioning","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("pointBerthingFenders","sima/simo/PointBerthingFender","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("rollerBerthingFenders","sima/simo/RollerBerthingFender","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("bumperDatas","sima/simo/BumperData","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("horizontalAxisWindTurbine","sima/simo/HorizontalAxisWindTurbine","",True))
        self.attributes.append(BlueprintAttribute("verticalAxisWindTurbine","sima/simo/VerticalAxisWindTurbine","",True))
        self.attributes.append(BlueprintAttribute("genericExternalControlSystems","sima/simo/GenericExternalControlSystem","",True,Dimension("*")))
        self.attributes.append(BlueprintAttribute("ballastSystem","sima/simo/BallastSystem","",True))
        self.attributes.append(EnumAttribute("hydrodynamicSeparationMethod","sima/simo/HydrodynamicSeparationMethod","Method for estimating low frequency motions"))
        self.attributes.append(Attribute("hydrodynamicFilterCutOffPeriod","number","Cut off period used to estimate low ferquency motion from total motion",default=0.0))
        self.attributes.append(BlueprintAttribute("bodyShapeData","sima/simo/BodyShapeData","",True))
        self.attributes.append(BlueprintAttribute("qtf","sima/hydro/SparseQTF","",True))