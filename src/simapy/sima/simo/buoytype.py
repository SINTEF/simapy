# This an autogenerated file
# 
# Generated with BuoyType
from typing import Dict,Sequence,List
from dmt.blueprint import Blueprint
from .blueprints.buoytype import BuoyTypeBlueprint
from typing import Dict
from ..sima import NamedObject
from ..sima import ScriptableValue
from .forceitem import ForceItem

class BuoyType(NamedObject):
    """
    Keyword arguments
    -----------------
    description : str
         (default "")
    scriptableValues : List[ScriptableValue]
    name : str
         (default None)
    forceCharacteristic : List[ForceItem]
    """

    def __init__(self , description="", **kwargs):
        super().__init__(**kwargs)
        self.description = description
        self.scriptableValues = list()
        self.name = None
        self.forceCharacteristic = list()
        for key, value in kwargs.items():
            if not isinstance(value, Dict):
                setattr(self, key, value)


    @property
    def blueprint(self) -> Blueprint:
        """Return blueprint that this entity represents"""
        return BuoyTypeBlueprint()


    @property
    def description(self) -> str:
        """"""
        return self.__description

    @description.setter
    def description(self, value: str):
        """Set description"""
        self.__description = value

    @property
    def scriptableValues(self) -> List[ScriptableValue]:
        """"""
        return self.__scriptableValues

    @scriptableValues.setter
    def scriptableValues(self, value: List[ScriptableValue]):
        """Set scriptableValues"""
        if not isinstance(value, Sequence):
            raise ValueError("Expected sequense, but was " , type(value))
        self.__scriptableValues = value

    @property
    def name(self) -> str:
        """"""
        return self.__name

    @name.setter
    def name(self, value: str):
        """Set name"""
        self.__name = value

    @property
    def forceCharacteristic(self) -> List[ForceItem]:
        """"""
        return self.__forceCharacteristic

    @forceCharacteristic.setter
    def forceCharacteristic(self, value: List[ForceItem]):
        """Set forceCharacteristic"""
        if not isinstance(value, Sequence):
            raise ValueError("Expected sequense, but was " , type(value))
        self.__forceCharacteristic = value
